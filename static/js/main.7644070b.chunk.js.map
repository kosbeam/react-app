{"version":3,"sources":["scripts/Config.js","components/Connection.jsx","components/Teleoperation.jsx","components/Home.jsx","components/About.jsx","components/Body.jsx","components/Footer.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Config","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","RECONNECT_TIMER","CMD_VEL_TOPIC","Connection","state","connected","ros","init_connection","this","window","ROSLIB","Ros","console","log","on","setState","setTimeout","connect","error","Alert","className","variant","Component","Teleoperation","handleMove","bind","handleStop","event","cmd_vel","Topic","name","messageType","twist","Message","linear","x","y","z","angular","publish","size","baseColor","stickColor","move","stop","Home","Container","Row","Col","About","Body","path","exact","component","Footer","Header","Navbar","bg","expand","collapseOnSelect","Brand","href","Toggle","Collapse","id","Nav","Link","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7644070b.chunk.js","sourcesContent":["const Config = {\n    ROSBRIDGE_SERVER_IP: \"192.168.1.18\",\n    ROSBRIDGE_SERVER_PORT: \"9090\",\n    RECONNECT_TIMER: 3000,\n    CMD_VEL_TOPIC: \"/cmd_vel\",\n\n};\nexport default Config;","import React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Config from \"../scripts/Config\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\n\nclass Connection extends Component {\n  state = { connected: false, ros: null };\n\n  constructor() {\n    super();\n    this.init_connection();\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established!\");\n      this.setState({ connected: true });\n    });\n\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({ connected: false });\n    });\n\n    setTimeout(() => {\n      try {\n        this.state.ros.connect(\n          \"ws://\" +\n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT +\n            \"\"\n        );\n      } catch (error) {\n        console.log(\"connection problem\");\n      }\n    }, Config.RECONNECT_TIMER);\n\n    try {\n      this.state.ros.connect(\n        \"ws://\" +\n          Config.ROSBRIDGE_SERVER_IP +\n          \":\" +\n          Config.ROSBRIDGE_SERVER_PORT +\n          \"\"\n      );\n    } catch (error) {\n      console.log(\"connection problem\");\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Alert\n          className=\"text-center m-3\"\n          variant={this.state.connected ? \"success\" : \"danger\"}\n        >\n          {this.state.connected ? \"Robot Connected\" : \"Robot Disconnected\"}\n        </Alert>\n      </div>\n    );\n  }\n}\nexport default Connection;\n","import React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/Config\";\n\nclass Teleoperation extends Component {\n  state = { ros: null };\n  constructor() {\n    super();\n    this.init_connection();\n    this.handleMove = this.handleMove.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established!\");\n      this.setState({ connected: true });\n    });\n\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({ connected: false });\n    });\n\n    setTimeout(() => {\n      try {\n        this.state.ros.connect(\n          \"ws://\" +\n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT +\n            \"\"\n        );\n      } catch (error) {\n        console.log(\"connection problem\");\n      }\n    }, Config.RECONNECT_TIMER);\n\n    try {\n      this.state.ros.connect(\n        \"ws://\" +\n          Config.ROSBRIDGE_SERVER_IP +\n          \":\" +\n          Config.ROSBRIDGE_SERVER_PORT +\n          \"\"\n      );\n    } catch (error) {\n      console.log(\"connection problem\");\n    }\n  }\n\n  handleMove(event) {\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    });\n    var twist = new window.ROSLIB.Message({\n      linear:{\n        x:event.y /50,\n        y:0,\n        z:0,\n      },\n      angular:{\n        x:0,\n        y:0,\n        z:-event.x /50,\n      },\n    });\n    cmd_vel.publish(twist);\n  }\n  handleStop(event) {\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    });\n    var twist = new window.ROSLIB.Message({\n      linear:{\n        x:0,\n        y:0,\n        z:0,\n      },\n      angular:{\n        x:0,\n        y:0,\n        z:0,\n      },\n    });\n    cmd_vel.publish(twist);\n  }\n\n  render() {\n    return (\n      <div>\n        <Joystick\n          size={100}\n          baseColor=\"#EEEEEE\"\n          stickColor=\"#BBBBBB\"\n          move={this.handleMove}\n          stop={this.handleStop}\n        ></Joystick>\n      </div>\n    );\n  }\n}\n\nexport default Teleoperation;\n","import React, { Component } from \"react\";\nimport Connection from \"./Connection\";\nimport Teleoperation from \"./Teleoperation\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\n\nclass Home extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <h1 className=\"text-center mt-3\">Robot controller page</h1>\n          <Row>\n            <Col>\n              <Connection />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <Teleoperation />\n            </Col>\n            <Col>\n              <h1>Map</h1>\n              <p> This regions will be filled display monitors</p>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <h1> About </h1>\n        <p>This is react app controls and moniters ROS-enable robots though a Web Interface</p>\n      </div>\n    );\n  }\n}\nexport default About;\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nclass Body extends Component {\n  render() {\n    return (\n      <Container>\n        <Router>\n          <Switch>\n              <Route path = \"/\" exact component={Home}></Route>\n              <Route path = \"/about\" exact component={About}></Route>\n\n          </Switch>\n        </Router>\n      </Container>\n    );\n  }\n}\nexport default Body;\n","import React, { Component } from 'react'\nimport { Container } from \"react-bootstrap\";\n\nclass Footer extends Component {\n    render(){\n        return (<Container className=\"text-center\"><p> ROS UBU CLUB &copy; 2021 </p></Container>);\n    }\n}\nexport default Footer;","import React, { Component } from \"react\";\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <Container>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n          <Navbar.Brand href=\"#\">ROS Robot Controller</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basis-navbar-nav\" />\n          <Navbar.Collapse id=\"basis-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/\">Home</Nav.Link>\n              <Nav.Link href=\"/About\">About</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </Container>\n    );\n  }\n}\nexport default Header;\n","import Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n      <Footer />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./bootstrap/lux-bootstrap.min.css\"\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}